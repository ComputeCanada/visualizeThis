---
layout: post
title:  "Parallel visualization tools"
ref: tools
date:   2019-08-20 09:48:44 +0100
categories: competition
lang: en
---

We will describe here a couple of open source visualization tools.
This years, the "Visualize This" challenge focuses in tackling large datasets and parallel rendering that could not be done using a simple workstation.
Hence parallel processing of the data and execution of the visualization pipeline is needed.
Both of the tools we describe in the following sections are designed with visualization and HPC principles in mind.
They are cross-platform, ie. they can run in different Operating Systems (OS), although we will again recommend and require that participants execute their visualization pipelines and renderings in a cluster enviroment taking advantage of parallel rendering.
These tools are perfectly well suited for running in HPC cluster environments, can run in client-server mode and take full advantage of multi-core and multi-node architectures, as well as, batch rendering.

Of course there are many other tools that can be used, but here we will restrict to discuss and present, VisIt and ParaView.

VisIt and ParaView share many common features, for instnace, they can be installed as precompiled binaries or by downloading the source codes and compiling them. There are versions available for Linux, Windows, and MacOS.
Both of them offer an interactive mode via a GUI, a command-line intrerface (CLI) and scripting using different languages, including python. They can also run in batch mode, specially recommended for using in HPC clusters.
One really useful feature that both programs offer and super-convenient at the moment of generating batch processing scripts, is the tool for "recording" the actions taken using the GUI and generated as a python sequence of commands into an actual script.
Then this script can be executed, tailored and modified accordingly.

If participants are not familiar with these tools, they are quite easy to learn and we recommend users to install a local version in their computers, investigate and practise with them first. We offer several links and references to workshop we have done utilizing VisIt and ParaView and the bottom of this section.

In addition to visualization capabilities, both ParaView and Visit, also offer analysis tools. Many times visualization is not only used to generate "pretty" images or movies, but also as an exploratory tool, and again these two programs are excelletn tools to acheive this too. Either using their GUIs or the CLIs via scripting, all types of queries and analysis can be done on the datasets loaded in these visualization engines.


### VisIt
Currently developed and maintained by Lawrence Livermore National Lab, https://wci.llnl.gov/simulation/computer-codes/visit/.
VisIt is an Open Source, interactive, scalable, visualization, animation and analysis tool.
VisIt can read hundred of different file formats, including OpenFOAM ones.

In the latest versions of VisIt we have noticed that it can be tricky to make it work with certain Linux distributions, in particular Ubuntu 17 or newer versions. If you are experiencing problems, please feel free to contact us.


VisIt documentation: https://visit-sphinx-github-user-manual.readthedocs.io/

VisIt Users wiki: http://www.visitusers.org/

VisIt Users Forum: http://www.visitusers.org/forum/


### ParaView
Originally started as a collaboration between Los Alamos National Lab and Kitware, currently is developed and mantained by Kitware, https://www.paraview.org/.
ParaView is an open-source, multi-platform data analysis and visualization application.
ParaView can read hundred of different file formats, inclduing OpenFOAM ones.

For instance, to load the data from this challegne, you just need to locate the "case.foam" file located in the directory of the dataset and open it in ParaView. This is a dummy empty file, that ParaView can understand and uses as a guide to identify and load all the data from an OpenFOAM simulation.


### Other Tools
#### Blender
Blender, https://www.blender.org, is more of --what we would call- an artistic visualization tool than a proper "Scientific Visualization" one, in comparison to Visit and ParaView.
Nevertheless the quality that one can reach is similar to "hollywood" characteristics.
Because of the complexity and large set of functionalities Blender offers, the learning curve is quite steep, in particular for mastering its more underlying features.
It not only offer some typical visualization algorithm, but also adds the ability of importing models, objects, as well as, provides several engines to simulate quite realistic scenarios.
Even when this is a quite power tool, unless the participants feel really comfortable using Blender and have reached a profiency using it, we will not recommend to tackle the challenge using Blender. 



### Further Resources:

#### Running VisIt and ParaView in Canada's National Clsuters:
https://docs.computecanada.ca/wiki/Visualization

https://docs.computecanada.ca/wiki/ParaView

https://docs.computecanada.ca/wiki/VisIt
